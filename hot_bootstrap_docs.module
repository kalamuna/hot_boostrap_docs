<?php

define('HOT_BOOTSTRAP_DOCS_TEMPLATES', 'templates');


/**
 * Implements hook_menu().
 */
function hot_bootstrap_docs_menu() {
  $items = array();

  $items['bootstrap-docs'] = array(
    'title' => 'Theme Tests',
    'description' => 'Pages demonstrating widgets and molecular components of the site build',
    'type' => MENU_NORMAL_ITEM, // so the path is available in the menu tree
    'access arguments' => array('administer nodes'), // should get inherited by tabs
    'page callback' => 'theme',
    'page arguments' => array('typography_test_page'), // this should change. We should have intro text
  );

  $items['bootstrap-docs/css'] = array(
    'title' => 'Bootstrap Base CSS',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'theme',
    'page arguments' => array('bootstrap_css'),
    'access arguments' => array('administer nodes'),
    'weight' => '-6',
  );
  $items['bootstrap-docs/components'] = array(
    'title' => 'Bootstrap Components',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'theme',
    'page arguments' => array('bootstrap_components'),
    'access arguments' => array('administer nodes'),
    'weight' => '-5',
  );
  $items['bootstrap-docs/js'] = array(
    'title' => 'Bootstrap JavaScript',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'theme',
    'page arguments' => array('bootstrap_js'),
    'access arguments' => array('administer nodes'),
    'weight' => '-4',
  );

  $items['bootstrap-docs/typography'] = array(
    'title' => 'Typography',
    'weight' => '-1',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'page callback' => 'theme',
    'page arguments' => array('typography_test_page'),
    'access arguments' => array('administer nodes'),
    'weight' => '-1',
  );

  return $items;
}

/**
 * Implements hook_libraries_info().
 *
 * For defining external libraries.
 */

function hot_bootstrap_docs_libraries_info() {
  // Expected to be extracted into 'sites/all/libraries/simple'.
  $libraries['bootstrap-docs'] = array(
    'name' => 'Hot Bootstrap Docs',
    'vendor url' => 'http://getbootstrap.com',
    'download url' => 'http://getbootstrap.com/getting-started/',
    'version arguments' => array(
      'file' => 'package.js', // Could be any file with version info 
      'pattern' => '/Version (\d+)/', 
      'lines' => 5,
    ),
    'files' => array(
      'css' => array(
        'assets/css/docs.min.css',
      ),
      'js' => array(
        'assets/js/widgets.js',
        'assets/js/holder.js',
        'assets/js/application.js',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_theme().
 */
function hot_bootstrap_docs_theme() {
  $items = array();

  $items['bootstrap_css'] = array(
    'template' => HOT_BOOTSTRAP_DOCS_TEMPLATES . '/bootstrap-css'
  );
  $items['bootstrap_components'] = array(
    'template' => HOT_BOOTSTRAP_DOCS_TEMPLATES . '/bootstrap-components'
  );
  $items['bootstrap_js'] = array(
    'template' => HOT_BOOTSTRAP_DOCS_TEMPLATES . '/bootstrap-js'
  );

  $items['typography_test_page'] = array(
    'template' => HOT_BOOTSTRAP_DOCS_TEMPLATES . '/typography-test-page',
  );

  return $items;
}

function hot_bootstrap_docs_bootstrap_css_preprocess(&$vars){
  xdebug_break();
}

/**
 * Implements hook_preprocess_page().
 */
function hot_bootstrap_docs_preprocess_page(&$vars, $hook) {
  if (arg(0) == 'bootstrap-docs' && module_exists('libraries')) {
    // Load the 
    libraries_load('bootstrap-docs');
  }
}
